<?phpnamespace etichette;use seositiframework as ssf;/** AGGIORNA OGGETTO * */function updateTo($type, ssf\MyObject $o) {    $result = null;    switch ($type) {        case OBJ_VOC:            $result = new Voce();            break;        case OBJ_CAT:            $result = new Categoria();            break;        case OBJ_CLI:            $result = new Cliente();            break;        case OBJ_ETI:            $result = new Etichetta();            break;        case OBJ_TEM:            $result = new Template();            break;        case OBJ_TRA:            $reuslt = new Traduzione;            break;    }    $result = $o;    return $result;}/** RESTITUISCO L'OGGETTO RICHIESTO * */function updateToVoce(ssf\MyObject $o): Voce {    return updateTo(OBJ_VOC, $o);}function updateToCategoria(ssf\MyObject $o): Categoria {    return updateTo(OBJ_CAT, $o);}function updateToCliente(ssf\MyObject $o): Cliente {    return updateto(OBJ_CLI, $o);}function updateToEtichetta(ssf\MyObject $o): Etichetta {    return updateTo(OBJ_ETI, $o);}function updateToTemplate(ssf\MyObject $o): Template {    return updateTo(OBJ_TEM, $o);}function updateToTraduzione(ssf\MyObject $o): Traduzione{    return updateTo(OBJ_TRA, $o);}/* * ************************* ALTRE FUNZIONI **************************** *///CREAZIONE PAGINEfunction createPages($pagine) {    foreach ($pagine as $item) {        //pagina padre        if (post_exists($item['pagina']) == 0) {            ssf\createPage($item['pagina'], '');        }    }}//Generazione di random string per url etichettefunction generateRandomString($length = 18) {    $characters = '0123456789abcdefghijklmnopqrstuvwxyz';    $charactersLength = strlen($characters);    $randomString = '';    for ($i = 0; $i < $length; $i++) {        $randomString .= $characters[random_int(0, $charactersLength - 1)];    }    return $randomString;}function getNomeCliente(int $idCliente): string {    $controller = new ClienteController();    $temp = $controller->get($idCliente);    if ($temp != null) {        $temp = updateToCliente($temp);        return $temp->getNome();    }    return 'non identificato';}function getNomeCategoria(int $idCategoria): string {    $controller = new EtichettaController();    $temp = $controller->getCategoriaByID($idCategoria);    if ($temp != null) {        $temp = updateToCategoria($temp);        return $temp->getNome();    }    return 'non identificato';}function paginaListaEtichette() {    echo addListaEtichetta();}function paginaAggiungiEtichetta() {    echo addListenerEtichettaForm();    echo addEtichettaSaveForm();}function addEtichettaDettaglioPage() {    echo addListenerEtichettaForm();    echo addDettaglioEtichetta();}function paginaAggiungiCliente() {    echo addListenerClienteForm();    echo addClienteSaveForm();}function paginaListaClienti() {    echo addListaClienti();}function paginaListaTemplate() {    echo addListaTemplate();}function paginaAggiungiTemplate() {    echo addListenerTemplateForm();    echo addTemplateSaveForm();}function addTemplateDettaglioPage() {    echo addListenerTemplateForm();    echo addDettaglioTemplate();}function addClienteDettaglioPage() {    echo addListenerClienteForm();    echo addDettaglioCliente();}function paginaAggiungiCategoria() {    echo addListenerCategoriaForm();    echo addCategoriaSaveForm();}function paginaListaCategorie() {    echo addListaCategorie();}function addCategoriaDettaglioPage() {    echo addListenerCategoriaForm();    echo addCategoriaDettaglio();}function paginaTraduzioni(){    echo addListenerTraduzioni();    echo addAttivaTraduzioni();}